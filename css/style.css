/*
	HTML5 Reset :: style.css
	----------------------------------------------------------
	We have learned much from/been inspired by/taken code where offered from:
	Eric Meyer					:: http://meyerweb.com
	HTML5 Doctor				:: http://html5doctor.com
	and the HTML5 Boilerplate	:: http://html5boilerplate.com
-------------------------------------------------------------------------------*/
/* Let's default this puppy out
-------------------------------------------------------------------------------*/
html {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font-weight: normal;
  vertical-align: baseline;
  background: transparent; }

body {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font-weight: normal;
  vertical-align: baseline;
  background: transparent; }
  body div {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font-weight: normal;
    vertical-align: baseline;
    background: transparent; }

span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, menu, nav, section, time, mark, audio, video, details, summary {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font-weight: normal;
  vertical-align: baseline;
  background: transparent; }

main, article, aside, figure, footer, header, nav, section, details, summary {
  display: block; }

/* Handle box-sizing while better addressing child elements:
   http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
html {
  box-sizing: border-box; }

* {
  box-sizing: inherit; }
  *:before, *:after {
    box-sizing: inherit; }

/* consider resetting the default cursor: https://gist.github.com/murtaugh/5247154 */
/* Responsive images and other embedded objects */
/* if you don't have full control over `img` tags (if you have to overcome attributes), consider adding height: auto */
img, object, embed {
  max-width: 100%; }

/*
   Note: keeping IMG here will cause problems if you're using foreground images as sprites.
	In fact, it *will* cause problems with Google Maps' controls at small size.
	If this is the case for you, try uncommenting the following:
#map img {
		max-width: none;
}
*/
/* force a vertical scrollbar to prevent a jumpy page */
html {
  overflow-y: scroll; }

/* we use a lot of ULs that aren't bulleted.
	you'll have to restore the bullets within content,
	which is fine because they're probably customized anyway */
ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after {
  content: '';
  content: none; }

q:before, q:after {
  content: '';
  content: none; }

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

del {
  text-decoration: line-through; }

abbr[title], dfn[title] {
  border-bottom: 1px dotted #000;
  cursor: help; }

/* tables still need cellspacing="0" in the markup */
table {
  border-collapse: separate;
  border-spacing: 0; }

th {
  font-weight: bold;
  vertical-align: bottom; }

td {
  font-weight: normal;
  vertical-align: top; }

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

input, select {
  vertical-align: middle; }

pre {
  white-space: pre;
  /* CSS2 */
  white-space: pre-wrap;
  /* CSS 2.1 */
  white-space: pre-line;
  /* CSS 3 (and 2.1 as well, actually) */
  word-wrap: break-word;
  /* IE */ }

input[type="radio"] {
  vertical-align: text-bottom; }

input[type="checkbox"] {
  vertical-align: bottom; }

.ie7 input[type="checkbox"] {
  vertical-align: baseline; }

.ie6 input {
  vertical-align: text-bottom; }

select, input, textarea {
  font: 99% sans-serif; }

table {
  font-size: inherit;
  font: 100%; }

small {
  font-size: 85%; }

strong {
  font-weight: bold; }

td {
  vertical-align: top; }
  td img {
    vertical-align: top; }

/* Make sure sup and sub don't mess with your line-heights http://gist.github.com/413930 */
sub {
  font-size: 75%;
  line-height: 0;
  position: relative; }

sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* standardize any monospaced elements */
pre, code, kbd, samp {
  font-family: monospace, sans-serif; }

/* hand cursor on clickable elements */
.clickable, label {
  cursor: pointer; }

input[type=button], input[type=submit], input[type=file] {
  cursor: pointer; }

button {
  cursor: pointer;
  margin: 0; }

/* Webkit browsers add a 2px margin outside the chrome of form elements */
input, select, textarea {
  margin: 0; }

/* make buttons play nice in IE */
button, input[type=button] {
  width: auto;
  overflow: visible; }

/* scale images in IE7 more attractively */
.ie7 img {
  -ms-interpolation-mode: bicubic; }

/* prevent BG image flicker upon hover
   (commented out as usage is rare, and the filter syntax messes with some pre-processors)
.ie6 html {filter: expression(document.execCommand("BackgroundImageCache", false, true));}
*/
/* let's clear some floats */
.clearfix:after {
  content: " ";
  display: block;
  clear: both; }

/* COLORS */
/* FONTS */
html {
  font-size: 16px; }

body {
  background-image: url("../images/IMG_373651%20(1).jpg");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  height: 80vh; }

header {
  background-color: rgba(255, 255, 255, 0.5); }
  header img {
    float: left; }
  header h1 {
    color: #e92121;
    line-height: 3.75rem;
    float: left;
    font-size: 2rem;
    font-family: "Lobster", cursive; }
  header ul {
    float: right; }
    header ul li {
      font-family: "Caveat Brush", cursive;
      line-height: 3.75rem;
      float: left;
      margin-right: 1.56rem;
      color: #e92121;
      font-size: 1.5rem; }

.container {
  margin: 0 auto;
  width: 70%;
  border: 2px solid red;
  padding: 1rem; }

form [name="kindOfCook"], form [name="meal"] {
  font-family: "Caveat Brush", cursive;
  font-size: 1.5rem; }

form {
  display: flex;
  flex-direction: column;
  width: 40%;
  margin: 1rem 2rem 1rem 2rem;
  font-family: "Caveat Brush", cursive; }
  form select, form label {
    margin-top: 2rem; }
  form legend {
    font-size: 2rem;
    color: #45173C; }
  form option {
    font-family: "Caveat Brush", cursive;
    font-size: 1.1rem; }
  form .inOrOut {
    color: #45173C;
    font-size: 1.5rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
